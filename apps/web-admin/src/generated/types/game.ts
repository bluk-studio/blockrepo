// @generated by protobuf-ts 2.3.0
// @generated from protobuf file "types/game.proto" (syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { User } from "./user";
/**
 * @type Game
 *
 * @generated from protobuf message Game
 */
export interface Game {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: optional string icon = 3;
     */
    icon?: string;
    /**
     * @generated from protobuf field: optional string thumbnail = 4;
     */
    thumbnail?: string;
    /**
     * @generated from protobuf field: optional User creator = 5;
     */
    creator?: User;
    /**
     * @generated from protobuf field: repeated string tags = 6;
     */
    tags: string[];
    /**
     * @generated from protobuf field: Game.LandingPageConfig landingPageConfig = 7;
     */
    landingPageConfig?: Game_LandingPageConfig;
}
/**
 * @generated from protobuf message Game.LandingPageConfig
 */
export interface Game_LandingPageConfig {
    /**
     * @generated from protobuf field: repeated Game.LandingPageConfig.HeaderLink headerLinks = 1;
     */
    headerLinks: Game_LandingPageConfig_HeaderLink[];
    /**
     * Description
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
}
/**
 * Header links
 *
 * @generated from protobuf message Game.LandingPageConfig.HeaderLink
 */
export interface Game_LandingPageConfig_HeaderLink {
    /**
     * @generated from protobuf field: string text = 1;
     */
    text: string;
    /**
     * @generated from protobuf field: string href = 2;
     */
    href: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class Game$Type extends MessageType<Game> {
    constructor() {
        super("Game", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "icon", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "thumbnail", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "creator", kind: "message", T: () => User },
            { no: 6, name: "tags", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "landingPageConfig", kind: "message", T: () => Game_LandingPageConfig }
        ]);
    }
    create(value?: PartialMessage<Game>): Game {
        const message = { id: "", name: "", tags: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Game>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Game): Game {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* optional string icon */ 3:
                    message.icon = reader.string();
                    break;
                case /* optional string thumbnail */ 4:
                    message.thumbnail = reader.string();
                    break;
                case /* optional User creator */ 5:
                    message.creator = User.internalBinaryRead(reader, reader.uint32(), options, message.creator);
                    break;
                case /* repeated string tags */ 6:
                    message.tags.push(reader.string());
                    break;
                case /* Game.LandingPageConfig landingPageConfig */ 7:
                    message.landingPageConfig = Game_LandingPageConfig.internalBinaryRead(reader, reader.uint32(), options, message.landingPageConfig);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Game, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* optional string icon = 3; */
        if (message.icon !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.icon);
        /* optional string thumbnail = 4; */
        if (message.thumbnail !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.thumbnail);
        /* optional User creator = 5; */
        if (message.creator)
            User.internalBinaryWrite(message.creator, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* repeated string tags = 6; */
        for (let i = 0; i < message.tags.length; i++)
            writer.tag(6, WireType.LengthDelimited).string(message.tags[i]);
        /* Game.LandingPageConfig landingPageConfig = 7; */
        if (message.landingPageConfig)
            Game_LandingPageConfig.internalBinaryWrite(message.landingPageConfig, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Game
 */
export const Game = new Game$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Game_LandingPageConfig$Type extends MessageType<Game_LandingPageConfig> {
    constructor() {
        super("Game.LandingPageConfig", [
            { no: 1, name: "headerLinks", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Game_LandingPageConfig_HeaderLink },
            { no: 2, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Game_LandingPageConfig>): Game_LandingPageConfig {
        const message = { headerLinks: [], description: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Game_LandingPageConfig>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Game_LandingPageConfig): Game_LandingPageConfig {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated Game.LandingPageConfig.HeaderLink headerLinks */ 1:
                    message.headerLinks.push(Game_LandingPageConfig_HeaderLink.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string description */ 2:
                    message.description = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Game_LandingPageConfig, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated Game.LandingPageConfig.HeaderLink headerLinks = 1; */
        for (let i = 0; i < message.headerLinks.length; i++)
            Game_LandingPageConfig_HeaderLink.internalBinaryWrite(message.headerLinks[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string description = 2; */
        if (message.description !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.description);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Game.LandingPageConfig
 */
export const Game_LandingPageConfig = new Game_LandingPageConfig$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Game_LandingPageConfig_HeaderLink$Type extends MessageType<Game_LandingPageConfig_HeaderLink> {
    constructor() {
        super("Game.LandingPageConfig.HeaderLink", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "href", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Game_LandingPageConfig_HeaderLink>): Game_LandingPageConfig_HeaderLink {
        const message = { text: "", href: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Game_LandingPageConfig_HeaderLink>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Game_LandingPageConfig_HeaderLink): Game_LandingPageConfig_HeaderLink {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string href */ 2:
                    message.href = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Game_LandingPageConfig_HeaderLink, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string href = 2; */
        if (message.href !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.href);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Game.LandingPageConfig.HeaderLink
 */
export const Game_LandingPageConfig_HeaderLink = new Game_LandingPageConfig_HeaderLink$Type();
